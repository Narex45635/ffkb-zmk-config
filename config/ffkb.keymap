#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define OTH     3


#define TAPPING_TERM 200
#define QUICK_TAP    150

&lt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <QUICK_TAP>;
};

&mt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <QUICK_TAP>;
};
&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_undo {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp LC(Z)>;
        };

        combo_q {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp Q>;
        };
        combo_semicolon {
            timeout-ms = <50>;
            key-positions = <33 34>;
            bindings = <&kp SEMI>;
        };
    };
};

/ {

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1 &encoder_2>;
    };

    behaviors {
        tdclr: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bt BT_CLR>;
        };
        tdrst: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&bootloader>;
        };
        hm: layer_mods {
            compatible = "tap-preferred";
            label = "LAYER_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        tdg: tap_dance_g {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_G";
            #binding-cells = <0>;
            tapping-term-ms = <QUICK_TAP>;
            bindings = <&kp G>, <&caps_word>;
        };
        tdh: tap_dance_h {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_M";
            #binding-cells = <0>;
            tapping-term-ms = <QUICK_TAP>;
            bindings = <&kp H>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp LC(RIGHT)  LC(LEFT) &inc_dec_kp LC(RIGHT)  LC(LEFT) >;

            bindings = <
    &kp EQUAL     &kp Q         &kp W        &kp E       &kp R         &kp T                              &kp Y        &kp U          &kp I       &kp O         &kp P         &kp BSLH
    &kp gresc    &lt OTH A     &lt SYM S    &lt NAV D   &hs LSHIFT F  &kp G                &trans        &kp H        &mt RALT J   &mt RGUI K   &hs RSHIFT L     &mt RCTL SEMI  &kp SINGLE_QUOTE
    &hs LSHIFT EQUAL &kp Z  &kp X        &kp C       &kp V         &kp B                              &kp N        &kp M          &kp COMMA   &kp DOT       &kp FSLH      &mt LC(LS(LALT)) MINUS
                            &trans       &mt LGUI BSPC  &lt NAV SPACE  &mt LC(LS(LALT)) BSPC                      &lt SYM ENTER &mt LSHIFT TAB  &lt OTH gresc &trans
            >;
        };

        raise_layer {
            label = "Raise";

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp LG(EQUAL) LG(MINUS) &inc_dec_kp LG(EQUAL) LG(MINUS)>;

            bindings = <
    &trans     &kp ESC      &kp PG_UP    &kp UP      &kp PG_DN     &trans                                      &kp C_NEXT            &trans         &kp LC(LEFT)    &kp LC(RIGHT)   &trans      &trans
    &trans     &kp LCTL     &kp LSHIFT   &kp LGUI    &kp LALT      &kp END              &trans                 &kp C_PLAY_PAUSE      &kp LEFT       &kp DOWN        &kp UP          &kp RIGHT   &trans
    &trans     &trans       &trans       &trans      &trans        &trans                                      &kp C_PREV            &kp HOME       &kp PG_UP       &kp PG_DN       &kp END     &trans
                                         &trans      &trans        &trans       &trans       &trans         &trans     &trans      &trans
            >;
        };
        lower_layer {
            label = "Lower  ";

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            bindings = <
    &kp EXCL     &kp AT            &kp HASH           &kp LBRC           &kp RBRC         &kp EQUAL                                   &kp EQUAL     &kp N7          &kp N8     &kp N9   &kp MINUS   &kp FSLH
    &kp DLLR     &hm LCTL PRCNT    &hm LSHIFT CARET   &hm LGUI LPAR      &hm LALT RPAR    &kp AMPS              &trans                &kp SQT       &kp N4          &kp N5     &kp N6   &kp PLUS    &kp STAR
    &kp AMPS     &kp STAR          &kp BSLH           &kp LBKT           &kp RBKT         &kp GRAVE                                   &kp N0        &kp N1          &kp N2     &kp N3   &kp DOT     &kp COMMA
                                         &trans          &trans           &trans       &trans        &trans       &trans        &trans            &kp N0
            >;
        };
    util_layer {
            label = "Util";

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            bindings = <
    &kp GRAVE  &kp EXCL &kp AT &kp HASH  &kp DOLLAR &kp PRCNT                                      &kp C_NEXT       &kp F7       &kp F8        &kp F9      &kp F10     &trans
    &kp TILDE     &tdclr    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3               &trans  &kp C_PLAY_PAUSE &kp F4       &kp F5        &kp F6      &kp F11     &trans
    &kp LSHIFT &trans   &trans       &trans      &trans       &tdrst                               &kp C_PREV       &kp F1       &kp F2        &kp F3      &kp F12     &trans
                                        &trans      &trans        &kp LALT      &kp BSPC        &kp LC(LEFT)   &kp LC(UP)    &kp LC(RIGHT)      &trans
            >;
        };
    };
};
